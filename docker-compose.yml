version: '3.8'

services:
  db:
    container_name: 'cc-postgres'
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=ClassroomChat
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pgserver

  backend:
    container_name: 'cc-backend'
    image: mcr.microsoft.com/dotnet/sdk:5.0
    ports:
      - 8080:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - DOTNET_RUNNING_IN_CONTAINER=true
    volumes:
      - ./api:/app/backend:rw
      - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
      - ${APPDATA}\.aspnet\https:/root/.aspnet/https/
    working_dir: /app/backend
    command: bash -c "dotnet restore && dotnet watch --project classroom-messenger-api run --no-launch-profile"
    depends_on:
      - db

  frontend:
    container_name: 'cc-frontend'    
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
      - 3000:3000
    environment:
      CHOKIDAR_USEPOLLING: 'true'
    volumes:
      - ./client:/app/frontend:rw
      - /app/frontend/node_modules
    working_dir: /app/frontend
    command: npm start
    depends_on:
      - backend

volumes:
  pgdata: {}
